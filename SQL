CREATE TABLE IF NOT EXISTS MusicCategory (
	MusicCategory_id SERIAL PRIMARY KEY,
	name VARCHAR(60) NOT NULL,
	description VARCHAR(60) NOT NULL
);

CREATE TABLE IF NOT EXISTS Singer (
	Singer_id SERIAL PRIMARY KEY,
	name VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS MusicCategorySinger (
	MusicCategory_id INTEGER REFERENCES MusicCategory(MusicCategory_id),
	Singer_id INTEGER REFERENCES Singer(Singer_id),
	CONSTRAINT MS PRIMARY KEY (MusicCategory_id, Singer_id)
);

CREATE TABLE IF NOT EXISTS Album (
	Album_id SERIAL PRIMARY KEY,
	name VARCHAR(60) NOT NULL,
	year_when_appeared INTEGER NOT NULL
);


CREATE TABLE IF NOT EXISTS AlbumSinger (
	Album_id INTEGER REFERENCES Album(Album_id),
	Singer_id INTEGER REFERENCES Singer(Singer_id),
	CONSTRAINT SA PRIMARY KEY (Album_id, Singer_id)
);

CREATE TABLE IF NOT EXISTS Track (
	Track_id SERIAL PRIMARY KEY,
	name VARCHAR(40) NOT NULL,
	play_time INTEGER NOT NULL,
	album_id INTEGER REFERENCES Album(Album_id)
);

CREATE TABLE IF NOT EXISTS Sbornik (
	Sbornik_id SERIAL PRIMARY KEY REFERENCES Track(Track_id),
	name VARCHAR(40) NOT NULL,
	year INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS SbornikTrack (
	Sbornik_id INTEGER REFERENCES Sbornik(Sbornik_id),
	Track_id INTEGER REFERENCES Track(Track_id),
	CONSTRAINT SAT PRIMARY KEY (Sbornik_id, Track_id)
);


